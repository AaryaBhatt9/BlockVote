{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhatt\\\\OneDrive\\\\Documents\\\\BlockVote\\\\client\\\\src\\\\screens\\\\Vote.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Candidate from \"../components/CandidateCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Vote(_ref) {\n  _s();\n  let {\n    role,\n    contract,\n    web3,\n    currentAccount\n  } = _ref;\n  // const [loading, setLoading] = useState(true);\n  const [candidates, setCandidates] = useState([]);\n  const [vote, setVote] = useState(null);\n  const [electionState, setElectionState] = useState(0);\n  const [open, setOpen] = useState(false);\n  const getCandidates = async () => {\n    if (contract) {\n      const count = await contract.methods.candidatesCount().call();\n      const temp = [];\n      for (let i = 0; i < count; i++) {\n        const candidate = await contract.methods.getCandidateDetails(i).call();\n        temp.push({\n          name: candidate[0],\n          votes: candidate[1]\n        });\n      }\n      setCandidates(temp);\n      // setLoading(false);\n    }\n  };\n\n  const voteCandidate = async candidate => {\n    try {\n      if (contract) {\n        await contract.methods.vote(candidate).send({\n          from: currentAccount\n        });\n        getCandidates();\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const getElectionState = async () => {\n    if (contract) {\n      const state = await contract.methods.electionState().call();\n      setElectionState(parseInt(state));\n    }\n  };\n  useEffect(() => {\n    getElectionState();\n    getCandidates();\n  }, [contract]);\n  const handleVoteChange = event => {\n    setVote(event.target.value);\n  };\n  const handleVote = event => {\n    event.preventDefault();\n    voteCandidate(vote);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVote,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        sx: {\n          mt: 0\n        },\n        spacing: 6,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            variant: \"h6\",\n            children: [electionState === 0 && \"Please Wait... Election has not started yet.\", electionState === 1 && \"VOTE FOR YOUR FAVOURITE CANDIDATE\", electionState === 2 && \"Election has ended. See the results below.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), electionState === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                sx: {\n                  overflowY: \"hidden\",\n                  overflowX: \"auto\",\n                  display: \"flex\",\n                  width: \"98vw\",\n                  justifyContent: \"center\"\n                },\n                value: vote,\n                onChange: handleVoteChange,\n                children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  labelPlacement: \"top\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 34\n                  }, this),\n                  value: index,\n                  label: /*#__PURE__*/_jsxDEV(Candidate, {\n                    id: index,\n                    name: candidate.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 32\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                margin: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                sx: {\n                  width: \"100%\"\n                },\n                children: \"Vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), electionState === 2 && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sx: {\n            overflowY: \"hidden\",\n            overflowX: \"auto\",\n            display: \"flex\",\n            width: \"98vw\",\n            justifyContent: \"center\"\n          },\n          children: candidates && candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mx: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Candidate, {\n              id: index,\n              name: candidate.name,\n              voteCount: candidate.votes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Vote, \"nWk11Dbux8mBmydtxW3SzgrgRds=\");\n_c = Vote;\nvar _c;\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"names":["useEffect","useState","Box","Grid","Button","Typography","Divider","Radio","RadioGroup","FormControlLabel","FormControl","Candidate","Vote","role","contract","web3","currentAccount","candidates","setCandidates","vote","setVote","electionState","setElectionState","open","setOpen","getCandidates","count","methods","candidatesCount","call","temp","i","candidate","getCandidateDetails","push","name","votes","voteCandidate","send","from","error","console","getElectionState","state","parseInt","handleVoteChange","event","target","value","handleVote","preventDefault","mt","overflowY","overflowX","display","width","justifyContent","map","index","margin","mx"],"sources":["C:/Users/bhatt/OneDrive/Documents/BlockVote/client/src/screens/Vote.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\n\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\n\nimport Candidate from \"../components/CandidateCard\";\n\nexport default function Vote({ role, contract, web3, currentAccount }) {\n  // const [loading, setLoading] = useState(true);\n  const [candidates, setCandidates] = useState([]);\n  const [vote, setVote] = useState(null);\n  const [electionState, setElectionState] = useState(0);\n\n  const [open, setOpen] = useState(false);\n\n  const getCandidates = async () => {\n    if (contract) {\n      const count = await contract.methods.candidatesCount().call();\n      const temp = [];\n      for (let i = 0; i < count; i++) {\n        const candidate = await contract.methods.getCandidateDetails(i).call();\n        temp.push({ name: candidate[0], votes: candidate[1] });\n      }\n      setCandidates(temp);\n      // setLoading(false);\n    }\n  };\n\n  const voteCandidate = async (candidate) => {\n    try {\n      if (contract) {\n        await contract.methods.vote(candidate).send({ from: currentAccount });\n        getCandidates();\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const getElectionState = async () => {\n    if (contract) {\n      const state = await contract.methods.electionState().call();\n      setElectionState(parseInt(state));\n    }\n  };\n\n  useEffect(() => {\n    getElectionState();\n    getCandidates();\n  }, [contract]);\n\n  const handleVoteChange = (event) => {\n    setVote(event.target.value);\n  };\n\n  const handleVote = (event) => {\n    event.preventDefault();\n    voteCandidate(vote);\n  };\n\n  return (\n    <Box>\n      <form onSubmit={handleVote}>\n        <Grid container sx={{ mt: 0 }} spacing={6} justifyContent=\"center\">\n          <Grid item xs={12}>\n            <Typography align=\"center\" variant=\"h6\">\n              {electionState === 0 &&\n                \"Please Wait... Election has not started yet.\"}\n              {electionState === 1 && \"VOTE FOR YOUR FAVOURITE CANDIDATE\"}\n              {electionState === 2 &&\n                \"Election has ended. See the results below.\"}\n            </Typography>\n            <Divider />\n          </Grid>\n          {electionState === 1 && (\n            <>\n              <Grid item xs={12}>\n                <FormControl>\n                  <RadioGroup\n                    row\n                    sx={{\n                      overflowY: \"hidden\",\n                      overflowX: \"auto\",\n                      display: \"flex\",\n                      width: \"98vw\",\n                      justifyContent: \"center\",\n                    }}\n                    value={vote}\n                    onChange={handleVoteChange}\n                  >\n                    {candidates.map((candidate, index) => (\n                      <FormControlLabel\n                        key={index}\n                        labelPlacement=\"top\"\n                        control={<Radio />}\n                        value={index}\n                        label={<Candidate id={index} name={candidate.name} />}\n                      />\n                    ))}\n                  </RadioGroup>\n                </FormControl>\n              </Grid>\n              <Grid item xs={6}>\n                <div style={{ margin: 20 }}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ width: \"100%\" }}\n                  >\n                    Vote\n                  </Button>\n                </div>\n              </Grid>\n            </>\n          )}\n\n          {electionState === 2 && (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                overflowY: \"hidden\",\n                overflowX: \"auto\",\n                display: \"flex\",\n                width: \"98vw\",\n                justifyContent: \"center\",\n              }}\n            >\n              {candidates &&\n                candidates.map((candidate, index) => (\n                  <Box sx={{ mx: 2 }} key={index}>\n                    <Candidate\n                      id={index}\n                      name={candidate.name}\n                      voteCount={candidate.votes}\n                    />\n                  </Box>\n                ))}\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}